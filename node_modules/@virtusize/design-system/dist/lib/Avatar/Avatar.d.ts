import { PropType } from "@vue/composition-api";
declare type BorderStyle = "dashed" | "none" | "solid";
declare type BorderWidth = "thin" | "thick";
declare type Size = "smaller" | "small" | "medium" | "large";
/**
 * A representation of something (e.g. a user, an icon)
 * @param {string} borderColor - Set the border color.
 * @param {string} borderStyle - Set the border style. Accepted values are dashed, none, or solid. Defaults to solid. Ignored when borderColor is set.
 * @param {string} borderWidth - Set the border thickness. Accepted values are thin, thick. Defaults to thick.
 * @param {array} componentClass - Add custom classes on the component.
 * @param {boolean} elevated - Show a shadow behind the component.
 * @param {string} size - Set the size of the component. Accepted values are small and large. Defaults to small.
 * @param {boolean} inverse - set the inner background color to black instead of white
 */
declare const Avatar: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    borderColor: StringConstructor;
    borderStyle: {
        type: PropType<BorderStyle>;
        default: () => "solid";
    };
    borderWidth: {
        type: PropType<BorderWidth>;
        default: () => "thin";
    };
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    elevated: BooleanConstructor;
    size: {
        type: PropType<Size>;
        default: () => "small";
    };
    inverse: BooleanConstructor;
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    borderColor: StringConstructor;
    borderStyle: {
        type: PropType<BorderStyle>;
        default: () => "solid";
    };
    borderWidth: {
        type: PropType<BorderWidth>;
        default: () => "thin";
    };
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    elevated: BooleanConstructor;
    size: {
        type: PropType<Size>;
        default: () => "small";
    };
    inverse: BooleanConstructor;
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    borderColor: StringConstructor;
    borderStyle: {
        type: PropType<BorderStyle>;
        default: () => "solid";
    };
    borderWidth: {
        type: PropType<BorderWidth>;
        default: () => "thin";
    };
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    elevated: BooleanConstructor;
    size: {
        type: PropType<Size>;
        default: () => "small";
    };
    inverse: BooleanConstructor;
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    borderColor: StringConstructor;
    borderStyle: {
        type: PropType<BorderStyle>;
        default: () => "solid";
    };
    borderWidth: {
        type: PropType<BorderWidth>;
        default: () => "thin";
    };
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    elevated: BooleanConstructor;
    size: {
        type: PropType<Size>;
        default: () => "small";
    };
    inverse: BooleanConstructor;
}, false>>);
export default Avatar;
