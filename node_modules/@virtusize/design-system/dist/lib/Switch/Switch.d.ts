import { PropType } from "@vue/composition-api";
declare type Value = number | string;
interface State {
    label: string;
    value: Value;
}
/**
 * @param {Value} value - A value Switch should display
 * @param {State[]} values - array containing information what label should be displayed
 * @param {array} componentClass - Add custom classes on the component.
 */
declare const Switch: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    value: {
        type: PropType<string | number>;
    };
    values: {
        type: PropType<State[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string | number) => void>;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    value: {
        type: PropType<string | number>;
    };
    values: {
        type: PropType<State[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string | number) => void>;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    value: {
        type: PropType<string | number>;
    };
    values: {
        type: PropType<State[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string | number) => void>;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    value: {
        type: PropType<string | number>;
    };
    values: {
        type: PropType<State[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string | number) => void>;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
}, false>>);
export default Switch;
