import { PropType } from "@vue/composition-api";
declare type AlignContent = "flexStart" | "flexEnd" | "center" | "stretch" | "baseline";
declare type FlexDirection = "row" | "rowReverse" | "column" | "columnReverse";
declare type FlexWrap = "noWrap" | "wrap" | "wrapReverse";
declare type JustifyContent = "flexStart" | "flexEnd" | "center" | "spaceBetween" | "spaceAround" | "spaceEvenly";
/**
 * Mobile first 12-column grid system container based on [Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/).
 * @param {string} alignContent - Acceptable values are flexStart, flexEnd, center, stretch, baseline. Defaults to stretch.
 * @param {array} componentClass - Add custom classes on the component.
 * @param {string} alignItems - Acceptable values are flexStart, flexEnd, center, stretch, baseline. Defaults to stretch.
 * @param {string} direction - Acceptable values are row, rowReverse, column, columnReverse. Defaults to row.
 * @param {boolean} gutter - DEPRECATED: Adds a space between grid items. Space will depend on the global baseline spacing value.
 * @param {string} height - GridContainer's height
 * @param {string} justifyContent - Acceptable values are flexStart, flexEnd, center, spaceBetween, spaceAround, spaceEvenly. Defaults to flexStart.
 * @param {boolean} withGutter - Adds a space between grid items. Space will depend on the global baseline spacing value.
 * @param {string} wrap - Acceptable values are noWrap, wrap, wrapReverse. Defaults to noWrap.
 */
declare const GridContainer: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    alignContent: PropType<AlignContent>;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    alignItems: PropType<AlignContent>;
    direction: PropType<FlexDirection>;
    gutter: BooleanConstructor;
    height: StringConstructor;
    justifyContent: PropType<JustifyContent>;
    withGutter: BooleanConstructor;
    wrap: PropType<FlexWrap>;
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    alignContent: PropType<AlignContent>;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    alignItems: PropType<AlignContent>;
    direction: PropType<FlexDirection>;
    gutter: BooleanConstructor;
    height: StringConstructor;
    justifyContent: PropType<JustifyContent>;
    withGutter: BooleanConstructor;
    wrap: PropType<FlexWrap>;
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    alignContent: PropType<AlignContent>;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    alignItems: PropType<AlignContent>;
    direction: PropType<FlexDirection>;
    gutter: BooleanConstructor;
    height: StringConstructor;
    justifyContent: PropType<JustifyContent>;
    withGutter: BooleanConstructor;
    wrap: PropType<FlexWrap>;
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    alignContent: PropType<AlignContent>;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    alignItems: PropType<AlignContent>;
    direction: PropType<FlexDirection>;
    gutter: BooleanConstructor;
    height: StringConstructor;
    justifyContent: PropType<JustifyContent>;
    withGutter: BooleanConstructor;
    wrap: PropType<FlexWrap>;
}, false>>);
export default GridContainer;
