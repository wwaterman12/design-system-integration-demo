"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _compositionApi = require("@vue/composition-api");

var _Button = _interopRequireDefault(require("../Button"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _NavBar = _interopRequireDefault(require("./NavBar.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Render NavBar.
 * @param {Boolean} showPrevButton - Render left hand button
 * @param {Boolean} showMenuButton - Render left hand menu button
 * @param {Boolean} showLogo - Render middle VS logo
 * @param {Boolean} showNextButton - Render right hand button
 * @param {string} prevText - Left hand side button text.
 * @param {string} nextText - Right hand side button text.
 * @param {array} componentClass - Add custom classes on the component.
 */
var NavBar = (0, _compositionApi.createComponent)({
  name: "NavBar",
  props: {
    showPrevButton: Boolean,
    showMenuButton: Boolean,
    showNextButton: Boolean,
    showLogo: Boolean,
    prevText: String,
    nextText: String,
    componentClass: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    onPrevClick: Object,
    onMenuClick: Object,
    onNextClick: Object
  },
  setup: function setup(props, context) {
    var onPrevClick = function onPrevClick() {
      return context.emit("prevClick");
    };

    var onMenuClick = function onMenuClick() {
      return context.emit("menuClick");
    };

    var onNextClick = function onNextClick() {
      return context.emit("nextClick");
    };

    var renderPrevBtn = function renderPrevBtn() {
      return (0, _compositionApi.createElement)(_Button.default, {
        "attrs": {
          "noBorder": true,
          "elevated": false,
          "small": true,
          "weight": "regular",
          "componentClass": [_NavBar.default.prevBtn]
        },
        "on": {
          "click": onPrevClick
        }
      }, [(0, _compositionApi.createElement)(_Icon.default, {
        "attrs": {
          "name": "angleLeft",
          "size": "small"
        },
        "slot": "leading"
      }), props.prevText]);
    };

    var renderMenuBtn = function renderMenuBtn() {
      return (0, _compositionApi.createElement)(_Button.default, {
        "attrs": {
          "round": true,
          "noBorder": true,
          "elevated": false,
          "componentClass": [_NavBar.default.menuBtn]
        },
        "on": {
          "click": onMenuClick
        }
      }, [(0, _compositionApi.createElement)(_Icon.default, {
        "attrs": {
          "name": "bars",
          "size": "normal"
        }
      })]);
    };

    var renderNextBtn = function renderNextBtn() {
      return (0, _compositionApi.createElement)(_Button.default, {
        "attrs": {
          "noBorder": true,
          "elevated": false,
          "small": true,
          "weight": "regular",
          "componentClass": [_NavBar.default.nextBtn]
        },
        "on": {
          "click": onNextClick
        }
      }, [props.nextText, (0, _compositionApi.createElement)(_Icon.default, {
        "attrs": {
          "name": "angleRight",
          "size": "small"
        },
        "slot": "trailing"
      })]);
    };

    return function () {
      var _context$slots$defaul, _context$slots;

      return (0, _compositionApi.createElement)("div", {
        "class": [_NavBar.default.root].concat(props.componentClass)
      }, [(0, _compositionApi.createElement)("div", {
        "class": [_NavBar.default.bar]
      }, [props.showPrevButton && renderPrevBtn(), props.showMenuButton && renderMenuBtn(), props.showLogo && (0, _compositionApi.createElement)(_Icon.default, {
        "attrs": {
          "name": "virtusize",
          "size": "normal"
        }
      }), props.showNextButton && renderNextBtn()]), (_context$slots$defaul = (_context$slots = context.slots).default) === null || _context$slots$defaul === void 0 ? void 0 : _context$slots$defaul.call(_context$slots)]);
    };
  }
});
var _default2 = NavBar;
exports.default = _default2;