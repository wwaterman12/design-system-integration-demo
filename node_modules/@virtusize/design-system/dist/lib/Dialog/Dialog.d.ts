import { PropType } from "@vue/composition-api";
/**
 * Alerts users to provide important information or decision.
 * @param {array} componentClass - Add custom classes on the component.
 * @param {boolean} open - Open Dialog.
 * @param {function} onClose - Callback function to invoke when Dialog is closed
 * @param {function} onEnter - Callback function to invoke when Dialog is opened
 * @param {function} onExit - Callback function to invoke before Dialog is closed
 * @param {number} zIndex - Set Dialog's z-index.
 */
declare const Dialog: import("vue").ComponentOptions<import("vue").default, () => false | JSX.Element, never, never, {
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    open: {
        type: BooleanConstructor;
        required: true;
    };
    onClose: PropType<() => void>;
    onEnter: PropType<() => void>;
    onExit: PropType<() => void>;
    zIndex: NumberConstructor;
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    open: {
        type: BooleanConstructor;
        required: true;
    };
    onClose: PropType<() => void>;
    onEnter: PropType<() => void>;
    onExit: PropType<() => void>;
    zIndex: NumberConstructor;
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    open: {
        type: BooleanConstructor;
        required: true;
    };
    onClose: PropType<() => void>;
    onEnter: PropType<() => void>;
    onExit: PropType<() => void>;
    zIndex: NumberConstructor;
}, true>, () => false | JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    open: {
        type: BooleanConstructor;
        required: true;
    };
    onClose: PropType<() => void>;
    onEnter: PropType<() => void>;
    onExit: PropType<() => void>;
    zIndex: NumberConstructor;
}, false>>);
export default Dialog;
