import { PropType } from "@vue/composition-api";
import { ChangeEvent } from "../../@types/tsx.shim";
/**
 * Wraps and provides the value, name, and the change event handler to Tiles.
 * @param {array} componentClass - Add custom classes on the component.
 * @param {string} name - Set a reference name for all the children Tiles.
 * @param {boolean} multiple - Enablee multiple selections
 * @param {function} onChange - ChangeEvent handler function
 * @param {boolean} rounded - Render Tiles to be rounded
 * @param {(string|number)} value - The value of the TileGroup
 */
declare const TileGroup: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    name: StringConstructor;
    multiple: BooleanConstructor;
    onChange: PropType<(value: never, event: ChangeEvent<Element>) => void>;
    rounded: BooleanConstructor;
    value: {
        type: PropType<string | number | (string | number)[]>;
        required: true;
    };
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    name: StringConstructor;
    multiple: BooleanConstructor;
    onChange: PropType<(value: never, event: ChangeEvent<Element>) => void>;
    rounded: BooleanConstructor;
    value: {
        type: PropType<string | number | (string | number)[]>;
        required: true;
    };
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    name: StringConstructor;
    multiple: BooleanConstructor;
    onChange: PropType<(value: never, event: ChangeEvent<Element>) => void>;
    rounded: BooleanConstructor;
    value: {
        type: PropType<string | number | (string | number)[]>;
        required: true;
    };
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    name: StringConstructor;
    multiple: BooleanConstructor;
    onChange: PropType<(value: never, event: ChangeEvent<Element>) => void>;
    rounded: BooleanConstructor;
    value: {
        type: PropType<string | number | (string | number)[]>;
        required: true;
    };
}, false>>);
export default TileGroup;
