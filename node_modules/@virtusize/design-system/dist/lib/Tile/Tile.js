"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _compositionApi = require("@vue/composition-api");

var _symbols = require("./symbols");

var _TextView = _interopRequireDefault(require("../TextView"));

var _Tile = _interopRequireDefault(require("./Tile.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * An individual option in TileGroup.
 * @param {array} componentClass - Add custom classes on the component.
 * @param {array} onClick - Callback function to invoke when Tile is clicked.
 * @param {(string|number)} value - This option's value
 */
var Tile = (0, _compositionApi.createComponent)({
  name: "Tile",
  props: {
    componentClass: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    onClick: Object,
    value: {
      type: String,
      required: true
    }
  },
  setup: function setup(props, context) {
    var name = (0, _compositionApi.inject)(_symbols.NAME);
    var onChange = (0, _compositionApi.inject)(_symbols.ONCHANGE);
    var rounded = (0, _compositionApi.inject)(_symbols.ROUNDED);
    var state = (0, _compositionApi.inject)(_symbols.STATE);

    var onClick = function onClick(event) {
      event.stopPropagation();
      context.emit("click", event);
    };

    return function () {
      var _context$slots$defaul, _context$slots;

      return (0, _compositionApi.createElement)("label", {
        "class": [_Tile.default.root].concat(props.componentClass)
      }, [Array.isArray(state.value) ? (0, _compositionApi.createElement)("input", {
        "attrs": {
          "type": "checkbox",
          "name": name
        },
        "class": _Tile.default.input,
        "domProps": {
          "value": props.value,
          "checked": state.value.indexOf(props.value) > -1
        },
        "on": {
          "change": onChange,
          "click": onClick
        }
      }) : (0, _compositionApi.createElement)("input", {
        "attrs": {
          "type": "radio",
          "name": name
        },
        "class": _Tile.default.input,
        "domProps": {
          "value": props.value,
          "checked": props.value === state.value
        },
        "on": {
          "change": onChange,
          "click": onClick
        }
      }), (0, _compositionApi.createElement)("div", {
        "class": [_Tile.default.container, rounded ? _Tile.default.rounded : ""]
      }, [(0, _compositionApi.createElement)("div", {
        "class": [_Tile.default.content, rounded ? _Tile.default.rounded : ""]
      }, [(0, _compositionApi.createElement)(_TextView.default, {
        "attrs": {
          "weight": "bold",
          "align": "center",
          "componentClass": [_Tile.default.text]
        }
      }, [(_context$slots$defaul = (_context$slots = context.slots).default) === null || _context$slots$defaul === void 0 ? void 0 : _context$slots$defaul.call(_context$slots)])])])]);
    };
  }
});
var _default2 = Tile;
exports.default = _default2;