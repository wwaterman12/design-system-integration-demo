import { PropType } from "@vue/composition-api";
import { MouseEvent } from "../../@types/tsx.shim";
declare type Event = MouseEvent;
/**
 * An individual option in TileGroup.
 * @param {array} componentClass - Add custom classes on the component.
 * @param {array} onClick - Callback function to invoke when Tile is clicked.
 * @param {(string|number)} value - This option's value
 */
declare const Tile: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onClick: PropType<(event: Event) => void>;
    value: {
        type: StringConstructor;
        required: true;
    };
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onClick: PropType<(event: Event) => void>;
    value: {
        type: StringConstructor;
        required: true;
    };
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onClick: PropType<(event: Event) => void>;
    value: {
        type: StringConstructor;
        required: true;
    };
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onClick: PropType<(event: Event) => void>;
    value: {
        type: StringConstructor;
        required: true;
    };
}, false>>);
export default Tile;
