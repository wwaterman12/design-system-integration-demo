import { PropType } from "@vue/composition-api";
declare const Strip: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    value: {
        type: StringConstructor;
        required: true;
    };
    selectedValue: StringConstructor;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string) => void>;
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    value: {
        type: StringConstructor;
        required: true;
    };
    selectedValue: StringConstructor;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string) => void>;
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    value: {
        type: StringConstructor;
        required: true;
    };
    selectedValue: StringConstructor;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string) => void>;
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    value: {
        type: StringConstructor;
        required: true;
    };
    selectedValue: StringConstructor;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string) => void>;
}, false>>);
export default Strip;
