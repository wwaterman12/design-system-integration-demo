import { PropType } from "@vue/composition-api";
/**
 * An individual item in Strip.
 * @param {array} componentClass - Add custom classes on the component.
 * @param {string} value - This item's value. Required prop.
 */
declare const StripItem: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    value: {
        type: StringConstructor;
        required: true;
    };
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    value: {
        type: StringConstructor;
        required: true;
    };
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    value: {
        type: StringConstructor;
        required: true;
    };
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    value: {
        type: StringConstructor;
        required: true;
    };
}, false>>);
export default StripItem;
