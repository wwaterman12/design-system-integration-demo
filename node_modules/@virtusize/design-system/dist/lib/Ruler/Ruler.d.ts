import { PropType } from "@vue/composition-api";
declare type Interval = "single" | "double";
/**
 * Select a value by scrolling horizontally.
 * @param {string} interval - Set how many lines would be rendered between ticks.
 *  Acceptable values are single and double.
 *  Single will render 10 lines between ticks. Double renders 10 more. Defaults to single.
 * @param {boolean} inverse - Set the inverted color scheme.
 * @param {function} onChange - Callback function when the value changes.
 * @param {array} ticks - Array of values to be shown as ticks. Can be a mix of strings and numbers.
 * @param {(string|number)} value - Preselect a tick.
 */
declare const Ruler: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    interval: {
        type: PropType<Interval>;
        default: string;
    };
    onChange: PropType<(value: string | number) => void>;
    ticks: {
        type: PropType<(string | number)[]>;
        default: () => never[];
    };
    value: PropType<string | number>;
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    interval: {
        type: PropType<Interval>;
        default: string;
    };
    onChange: PropType<(value: string | number) => void>;
    ticks: {
        type: PropType<(string | number)[]>;
        default: () => never[];
    };
    value: PropType<string | number>;
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    interval: {
        type: PropType<Interval>;
        default: string;
    };
    onChange: PropType<(value: string | number) => void>;
    ticks: {
        type: PropType<(string | number)[]>;
        default: () => never[];
    };
    value: PropType<string | number>;
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    interval: {
        type: PropType<Interval>;
        default: string;
    };
    onChange: PropType<(value: string | number) => void>;
    ticks: {
        type: PropType<(string | number)[]>;
        default: () => never[];
    };
    value: PropType<string | number>;
}, false>>);
export default Ruler;
