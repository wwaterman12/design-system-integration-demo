import { PropType } from "@vue/composition-api";
interface Tab {
    label: string;
    value: string;
}
/**
 * Used to indicate the current active screen.
 * @param {array} componentClass - Add custom classes on the component.
 * @param {array} tabs - Set the array of tabs. A tab must be of format { label: "Label", value: "value" }.
 * @param {string} value - Select the current Tab.
 */
declare const TabBar: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string) => void>;
    tabs: {
        type: PropType<Tab[]>;
        required: true;
    };
    value: StringConstructor;
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string) => void>;
    tabs: {
        type: PropType<Tab[]>;
        required: true;
    };
    value: StringConstructor;
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string) => void>;
    tabs: {
        type: PropType<Tab[]>;
        required: true;
    };
    value: StringConstructor;
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    onChange: PropType<(value: string) => void>;
    tabs: {
        type: PropType<Tab[]>;
        required: true;
    };
    value: StringConstructor;
}, false>>);
export default TabBar;
