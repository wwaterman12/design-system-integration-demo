import { PropType } from "@vue/composition-api";
declare type Size = "small" | "normal" | "large" | "larger";
/**
 * Renders an SVG icon in the document.
 * @param {string} color - Set a fill color to use for the icon.
 * @param {array} componentClass - Add custom classes on the component.
 * @param {string} inverse - Set the inverted color scheme. Ignored when color is set.
 * @param {string} name - Name of the icon to render
 * @param {string} size - Set the icon size. Acceptable values are small, normal, large, larger. Defaults to normal.
 */
declare const Icon: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    color: StringConstructor;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    inverse: BooleanConstructor;
    name: {
        type: PropType<"search" | "image" | "line" | "click" | "close" | "model" | "email" | "addImage" | "alert" | "angleDown" | "angleLeft" | "angleRight" | "angleUp" | "arrowRight" | "arrowsInCircle" | "bars" | "body1" | "body2" | "brandSizing" | "card" | "cart" | "checkCircle" | "closeCircle" | "cog" | "compare" | "edit" | "empty" | "questionHanger" | "eye" | "eyeSlash" | "facebook" | "female" | "fit" | "globe" | "hanger" | "heartOutline" | "heartSolid" | "informationOutline" | "informationSolid" | "ipad" | "laptop" | "lock" | "male" | "measureBody" | "measureTape" | "mobile" | "paper" | "petBottle" | "plusCircle" | "profile" | "questionCircle" | "shoppingBag" | "skirt" | "starOutline" | "starSolid" | "stretchiness" | "twitter" | "unisex" | "virtusize" | "wardrobe" | "yarn">;
        required: true;
    };
    size: {
        type: PropType<Size>;
        default: () => "normal";
    };
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    color: StringConstructor;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    inverse: BooleanConstructor;
    name: {
        type: PropType<"search" | "image" | "line" | "click" | "close" | "model" | "email" | "addImage" | "alert" | "angleDown" | "angleLeft" | "angleRight" | "angleUp" | "arrowRight" | "arrowsInCircle" | "bars" | "body1" | "body2" | "brandSizing" | "card" | "cart" | "checkCircle" | "closeCircle" | "cog" | "compare" | "edit" | "empty" | "questionHanger" | "eye" | "eyeSlash" | "facebook" | "female" | "fit" | "globe" | "hanger" | "heartOutline" | "heartSolid" | "informationOutline" | "informationSolid" | "ipad" | "laptop" | "lock" | "male" | "measureBody" | "measureTape" | "mobile" | "paper" | "petBottle" | "plusCircle" | "profile" | "questionCircle" | "shoppingBag" | "skirt" | "starOutline" | "starSolid" | "stretchiness" | "twitter" | "unisex" | "virtusize" | "wardrobe" | "yarn">;
        required: true;
    };
    size: {
        type: PropType<Size>;
        default: () => "normal";
    };
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    color: StringConstructor;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    inverse: BooleanConstructor;
    name: {
        type: PropType<"search" | "image" | "line" | "click" | "close" | "model" | "email" | "addImage" | "alert" | "angleDown" | "angleLeft" | "angleRight" | "angleUp" | "arrowRight" | "arrowsInCircle" | "bars" | "body1" | "body2" | "brandSizing" | "card" | "cart" | "checkCircle" | "closeCircle" | "cog" | "compare" | "edit" | "empty" | "questionHanger" | "eye" | "eyeSlash" | "facebook" | "female" | "fit" | "globe" | "hanger" | "heartOutline" | "heartSolid" | "informationOutline" | "informationSolid" | "ipad" | "laptop" | "lock" | "male" | "measureBody" | "measureTape" | "mobile" | "paper" | "petBottle" | "plusCircle" | "profile" | "questionCircle" | "shoppingBag" | "skirt" | "starOutline" | "starSolid" | "stretchiness" | "twitter" | "unisex" | "virtusize" | "wardrobe" | "yarn">;
        required: true;
    };
    size: {
        type: PropType<Size>;
        default: () => "normal";
    };
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    color: StringConstructor;
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    inverse: BooleanConstructor;
    name: {
        type: PropType<"search" | "image" | "line" | "click" | "close" | "model" | "email" | "addImage" | "alert" | "angleDown" | "angleLeft" | "angleRight" | "angleUp" | "arrowRight" | "arrowsInCircle" | "bars" | "body1" | "body2" | "brandSizing" | "card" | "cart" | "checkCircle" | "closeCircle" | "cog" | "compare" | "edit" | "empty" | "questionHanger" | "eye" | "eyeSlash" | "facebook" | "female" | "fit" | "globe" | "hanger" | "heartOutline" | "heartSolid" | "informationOutline" | "informationSolid" | "ipad" | "laptop" | "lock" | "male" | "measureBody" | "measureTape" | "mobile" | "paper" | "petBottle" | "plusCircle" | "profile" | "questionCircle" | "shoppingBag" | "skirt" | "starOutline" | "starSolid" | "stretchiness" | "twitter" | "unisex" | "virtusize" | "wardrobe" | "yarn">;
        required: true;
    };
    size: {
        type: PropType<Size>;
        default: () => "normal";
    };
}, false>>);
export default Icon;
