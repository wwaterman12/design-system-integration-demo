import { PropType } from "@vue/composition-api";
import { MouseEvent } from "../../@types/tsx.shim";
declare type Event = MouseEvent;
/**
 * Select an item in a more visual, appealing way.
 * @param {array} componentClass - Add custom classes on the component
 * @param {boolean} fluid - Set VisualPicker to use all available horizontal space.
 * @param {onClick} onClick - Callback function to invoke when VisualPicker is clicked
 * @param {boolean} selected - Set VisualPicker to be selected
 */
declare const VisualPicker: import("vue").ComponentOptions<import("vue").default, () => JSX.Element, never, never, {
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    fluid: BooleanConstructor;
    onClick: PropType<(event: Event) => void>;
    selected: BooleanConstructor;
}, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    fluid: BooleanConstructor;
    onClick: PropType<(event: Event) => void>;
    selected: BooleanConstructor;
}, false>> & (new () => import("@vue/composition-api").ComponentRenderProxy<import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    fluid: BooleanConstructor;
    onClick: PropType<(event: Event) => void>;
    selected: BooleanConstructor;
}, true>, () => JSX.Element, import("@vue/composition-api/dist/component/componentProps").ExtractPropTypes<{
    componentClass: {
        type: PropType<string[]>;
        default: () => never[];
    };
    fluid: BooleanConstructor;
    onClick: PropType<(event: Event) => void>;
    selected: BooleanConstructor;
}, false>>);
export default VisualPicker;
